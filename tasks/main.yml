---
- name: Add Percona apt signing key
  sudo: yes
  apt_key: url=http://www.percona.com/redir/downloads/RPM-GPG-KEY-percona state=present
  #apt_key: keyserver=keys.gnupg.net id=1C4CBDCDCD2EFD2A state=present # >= 1.6
  tags: mysql


- name: Add Percona repository
  sudo: yes
  apt_repository: state=present repo='{{ item }}'
  with_items:
    - deb http://repo.percona.com/apt trusty main
    - deb-src http://repo.percona.com/apt trusty main
  tags: mysql


- name: Update apt cache
  sudo: yes
  apt: update_cache=yes
  tags: mysql


- name: Install Percona packages
  sudo: yes
  apt: pkg={{ item }} state=present update_cache=yes
  with_items:
    - percona-server-common-5.6
    - percona-server-client-5.6
    - percona-server-server-5.6
    # Python package (required for mysql_user, mysql_db)
    - python-mysqldb
    - mytop
  environment:
    DEBIAN_FRONTEND: noninteractive
  tags: mysql


- name: Create Mysql configuration files
  sudo: yes
  template:
    src=etc/mysql/{{ item }}
    dest=/etc/mysql/{{ item }}
  notify:
    - restart mysql
  with_items:
    - conf.d/my.cnf
  tags:
    - mysql
    - mysql_config


- name: Configure .my.cnf file with maitenance password credentials
  sudo: yes
  file: state=link src=/etc/mysql/debian.cnf dest=~/.my.cnf
  tags:
    - mysql
    - mysql_users


- name: Remove MySQL insecure users
  sudo: yes
  mysql_user:
    state=absent
    name={{ item.user }}
    host="{{ item.host }}"
  with_items:
    - { user: "", host: "localhost" }
    - { user: "", host: "127.0.0.1" }
    - { user: "", host: "::1" }
    - { user: "", host: $ansible_hostname }
    - { user: "root", host: "localhost" }
    - { user: "root", host: "127.0.0.1" }
    - { user: "root", host: "::1" }
    - { user: "root", host: $ansible_hostname }
  tags:
    - mysql
    - mysql_users


- name: Create MySQL users
  sudo: yes
  mysql_user:
    state=present
    name="{{ item.user }}"
    password="{{ item.password }}"
    {% if item.database is defined %}
      priv="{{ item.database }}.*:ALL"
    {% else %}
      priv="{{ item.priv }}"
    {% endif %}
    {% if item.host is defined %}
      host="{{ item.host }}"
    {% else %}
      host="localhost"
    {% endif %}
  when: mysql_users is defined
  with_items: mysql_users
  tags:
    - mysql
    - mysql_users


- name: Create MySQL databases
  sudo: yes
  mysql_db:
    state=present
    name="{{ item.name }}"
    import="{{ item.import | default(omit) }}"
  when: mysql_databases is defined
  with_items: mysql_databases
  tags:
    - mysql
    - mysql_data
